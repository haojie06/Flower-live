{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\nfunction GBK(codes) {\n  codes = codes || require('./codes');\n  var arr_index = 0x8140; //33088;\n  return {\n    decode(arr) {\n      var str = \"\";\n      for (var n = 0, max = arr.length; n < max; n++) {\n        var code = arr[n];\n        if (code & 0x80) {\n          code = codes[(code << 8 | arr[++n]) - arr_index]\n        }\n        str += String.fromCharCode(code);\n      }\n      return str;\n    },\n    encode(str) {\n      str += '';\n      var gbk = [];\n      var wh = '?'.charCodeAt(0);\n      for (var i = 0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) gbk.push(charcode)\n        else {\n          var gcode = codes.indexOf(charcode);\n          if (~gcode) {\n            gcode += arr_index;\n            gbk.push(0xFF & (gcode >> 8), 0xFF & gcode);\n          } else {\n            gbk.push(wh);\n          }\n        }\n      }\n      return gbk;\n    }\n  }\n};\n\nvar gbk;\nconst createOrReuseInstance = () => {\n  if(!gbk) gbk = GBK();\n  return gbk;\n};\n\nObject.defineProperties(GBK, {\n  encode: {\n    get(){\n      const gbk = createOrReuseInstance();\n      return gbk.encode;\n    }\n  },\n  decode: {\n    get(){\n      const gbk = createOrReuseInstance();\n      return gbk.decode;\n    }\n  }\n});\n\nmodule.exports = GBK;"]}